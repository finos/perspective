// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
// ┃ ██████ ██████ ██████       █      █      █      █      █ █▄  ▀███ █       ┃
// ┃ ▄▄▄▄▄█ █▄▄▄▄▄ ▄▄▄▄▄█  ▀▀▀▀▀█▀▀▀▀▀ █ ▀▀▀▀▀█ ████████▌▐███ ███▄  ▀█ █ ▀▀▀▀▀ ┃
// ┃ █▀▀▀▀▀ █▀▀▀▀▀ █▀██▀▀ ▄▄▄▄▄ █ ▄▄▄▄▄█ ▄▄▄▄▄█ ████████▌▐███ █████▄   █ ▄▄▄▄▄ ┃
// ┃ █      ██████ █  ▀█▄       █ ██████      █      ███▌▐███ ███████▄ █       ┃
// ┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
// ┃ Copyright (c) 2017, the Perspective Authors.                              ┃
// ┃ ╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌ ┃
// ┃ This file is part of the Perspective library, distributed under the terms ┃
// ┃ of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). ┃
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

@border-color: 1px solid #eaeaea;

.workspace-master-widget {
    --config-button-icon--content: var(
        --open-settings-button--content,
        "\1F527"
    ) !important;
}

.workspace-master-widget[settings] {
    --config-button-icon--content: var(
        --close-settings-button--content,
        "\1F527"
    ) !important;
}

:not(.workspace-master-widget).widget-maximize {
    --config-button-icon--content: var(
        --open-settings-button--content,
        "\1F527"
    ) !important;
}

:not(.workspace-master-widget).widget-maximize[settings] {
    --config-button-icon--content: var(
        --close-settings-button--content,
        "\1F527"
    ) !important;
}

.lm-DockPanel-widget {
    border: @border-color;
    border-width: 0px !important;
    min-width: 300px;
    min-height: 200px;
}

:not.workspace-master-widget {
    --config-button-icon--content: "" !important;
}

.context-menu > perspective-viewer.context-focus {
    opacity: 1;
    filter: none;
}

.context-menu > perspective-viewer {
    filter: saturate(0);

    & > * {
        pointer-events: none;
    }
}

::slotted(perspective-viewer) {
    flex: 1;
    position: relative;
    display: block;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    width: 100%;
    height: 100%;
    overflow: visible !important;
}

:host-context(.lm-mod-override-cursor) {
    cursor: grabbing !important;
}

:host-context(.lm-mod-override-cursor) ::slotted(perspective-viewer),
.context-menu ::slotted(perspective-viewer) {
    --override-content-pointer-events: none;
}
